nasm("
section .bss
	current_char:	resb	1
	char_next:	resb	1
	ret_size:			resq	1
	block_cnt:		resq  1
	enclosing_loo:resq  1

	token_tye:		resq	1

	token:
	token_length:	resq	1
	token_size:		resq	1
	token_image:	resb	2048

	fun:
	fun_length:	resq 1
	fun_size:		resq 1
	fun_data:		resb 256

	ident:
	ident_length:	resq 1
	ident_size:		resq 1
	ident_data:		resb 256

	ident2:
	resq 2
	resb 256

	num_str:
	resq 2
	resb 256

	indexing:
	resq 2
	resb 256

	in_file_fid:	resq 1
	out_file_fid:	resq 1
	line_number:	resq 1
	column_number:resq 1
	file_name:		resq 1
	fun_names:		resq 1
	strings:			resq 1
	registers:		resq 1
	enum_names:		resq 1
	enum_items:		resq 1

section .data
	new_line:
	dq 1, 1
	db 10

	quote:
	dq 1, 1
	db 39

section .text
global main
")

include "src/printer.v8"
include "src/tokenizer.v8"
include "src/array.v8"
include "src/memory.v8"
include "src/parser.v8"
include "src/string.v8"

func read_number(0, 0) {
	rax = 0
	rbx = token_image
	rcx = 10
	r11 = 0
	r12 = token_length[0]

	loop {
		nasm("mov r11b, BYTE[rbx]")
		rbx++
		r11b -= '0'
		nasm("mul rcx")
		al += r11b
		r12--
		if (r12 == 0) {break}
	}
	return
}

func main(0, 1) {
	arg0 = 0

	# Open in file
	rsi += 8
	var1 = rsi
	rsi = rsi[0]
	sys(2,rsi,0,511)
	in_file_fid[0] = rax

	# Create out file
	rsi = var1
	rsi += 8
	rsi = rsi[0]
	sys(85,rsi,511)
	out_file_fid[0] = rax

	# Create array for function names
	call array_new(1024)
	fun_names[0] = rax

	# Create array for string literals
	call array_new(1024)
	strings[0] = rax

	# Create arrays for enums
	call array_new(10)
	enum_names[0] = rax
	call array_new(10)
	enum_items[0] = rax

	# initialize registers array
	call array_new(6)
	registers[0] = rax
	call array_append(registers[0], "rax,")
	call array_append(registers[0], "rdi,")
	call array_append(registers[0], "rsi,")
	call array_append(registers[0], "rdx,")
	call array_append(registers[0], "r10,")
	call array_append(registers[0], "r8,")

	# Initialize tokenizer
	nasm("mov BYTE[char_next], 1
	")
	call token_kee_char()
	token_length[0] = 0
	line_number[0] = 1
	column_number[0] = 1

	call statements()

	# Write data section
	call string_print(FILE, new_line)
	call string_print(FILE, "section .data")
	call string_print(FILE, new_line)
	call list_func(FILE)
	call list_str(FILE)
	call list_enums(FILE)

	nasm("
	mov rsp, rbp
	pop rbp
	")
	sys(60,0)
}
