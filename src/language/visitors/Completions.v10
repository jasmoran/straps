func Completions Completions_new() {
	var Visitor v = 0
	var fun = Completions_new(v, NullString)
	fun.v = fun
	return fun
}

class virtual Completions < Visitor (Visitor v, String previousFile) {
	func void visit(FunctionNode n) {
		if (n.position.stream == this.previousFile) {
			"  end:".println()
			printPos(n.position)
		}
		this.previousFile = n.position.stream

		"- start:".println()
		printPos(n.block.position)

		if (n.position.note != NullString) {
			"  generator: ".print()
			n.position.note.println()
		}

		"  function: ".print()
		n.name.println()
		"  variables:".println()
		for (name in n.scope.scope.keys) {
			"  - ".print()
			name.println()
		}
		return 0
	}
}
