func Variables Variables_new()(FunctionNode fn) {
	return Variables_new(None<FunctionNode>)
}

class virtual Variables < Visitor (Option<FunctionNode> containing_fun) {
	func Option<Node> visit(FunctionNode n) {
		var old_cf = this.containing_fun
		this.containing_fun = Some(n)
		n.accept_children(this)
		this.containing_fun = old_cf
		return None<Node>
	}

	func Option<Node> visit(UnaryOperationNode n) {
		if (n.op != VAR) return None<Node>
		var binop = n.expr.to(BinaryOperationNode)
		this.containing_fun.expect("var declared outside of any function").vrbls.append(binop.lhs)
		return Some(binop.to(Node))
	}
}
