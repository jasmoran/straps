func Variables Variables_new()(FunctionNode fn) {
	fn = 0
	var Visitor v = 0
	var vs = Variables_new(v, fn)
	vs.v = vs
	return vs
}

class virtual Variables < Visitor (Visitor v, FunctionNode containing_fun) {
	func void visit(FunctionNode n)(FunctionNode old_cf) {
		old_cf = this.containing_fun
		this.containing_fun = n
		n.accept_children(this.v)
		this.containing_fun = old_cf
		return 0
	}

	func void visit(UnaryOperationNode n)(BinaryOperationNode binop) {
		if (n.op != VAR) return 0
		binop = n.expr
		this.containing_fun.vrbls.append(binop.lhs)
		return binop
	}
}
