define t "BlockNode"
include "src/stdlib/Option.generic"

func BlockNode BlockNode_new(Position pos)() {
	return BlockNode_new(nBLOCK, pos, LinkedList<Node>_new())
}

class virtual BlockNode < Node (LinkedList<Node> children) {
	func Option<BlockNode> accept(Visitor v) {
		return v.visit(this)
	}

	func void accept_children(Visitor v) {
		for (n in this.children) {
			n_iter.set(n.accept(v).unwrap_or(n))
		}
	}

	func BlockNode append(Node n) {
		this.children.append(n)
		return this
	}

	func BlockNode prepend(Node n) {
		this.children.prepend(n)
		return this
	}

	func BlockNode clone() {
		return BlockNode_new(this.type, this.position, this.children)
	}
}