func BinaryOperationNode BinaryOperationNode_new(PositionRange pos, Token op, Node lhs, Node rhs) {
	return BinaryOperationNode_new(Type_new(), pos, op, lhs, rhs)
}
func BinaryOperationNode BinaryOperationNode_new(Type ret_type, PositionRange pos, Token op, Node lhs, Node rhs) {
	return BinaryOperationNode_new(nBINARYOP, pos, ret_type, op, lhs, rhs)
}

class virtual BinaryOperationNode < OpNode (Node lhs, Node rhs) {
	func Option<Node> accept(Visitor v) {
		return v.visit(this)
	}

	func void accept_children(Visitor v) {
		this.lhs = this.lhs.accept(v).unwrap_or(this.lhs)
		this.rhs = this.rhs.accept(v).unwrap_or(this.rhs)
	}

	func BinaryOperationNode clone() {
		return BinaryOperationNode_new(this.type, this.position, this.ret_type, this.op, this.lhs, this.rhs)
	}
}