require("src/language/visitors/Visitor")

enum NodeType {
	nNONE nNASM nSYS nBLOCK nPAREN_LIST nFUNCTION nRETURN nCOMPARISON nIF
	nNEXT nLOOP nBREAK nIDENTIFIER nENUM nCOMMENT nCHARACTER nSTRING nNUMBER
	nINDEX nCALL nOPERATION nMEM_ACCESS nREGISTER nPUSH nPOP nCLASS nFIELD nGLOBAL
	nSTRINGS nBINARYOP nUNARYOP nLIST nFUNCTIONS nVTAB_ACCESS nFOR
}

class NodeType() {
	func String toString()(Array<String> a, Number ix) {
		nasm("mov rax, NodeType")
		a = rax
		ix = this
		return a.get(ix)
	}
}

class virtual Node(NodeType type, Position position) {
	func void accept(Visitor v)() {
		v.visit(this)
	}

	func void accept_children(Visitor v)() {}

	func Node toNode()() { return this }

	func Node clone() {
		return Node_new(this.type, this.position)
	}
}