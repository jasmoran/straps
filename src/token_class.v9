func tc_comparitor(required)() {
	token_load()

	if (token_tye[0] == EQUAL) {
		token_consume(EQUAL)
		return EQUAL
	}
	if (token_tye[0] == NOT_EQUAL) {
		token_consume(NOT_EQUAL)
		return NOT_EQUAL
	}
	if (token_tye[0] == GREATER) {
		token_consume(GREATER)
		return GREATER
	}
	if (token_tye[0] == GREATER_EQ) {
		token_consume(GREATER_EQ)
		return GREATER_EQ
	}
	if (token_tye[0] == LESS) {
		token_consume(LESS)
		return LESS
	}
	if (token_tye[0] == LESS_EQ) {
		token_consume(LESS_EQ)
		return LESS_EQ
	}

	if (var required == 1) {
		string_print(STDERR, "Error: expected token of class COMPARISON got token ")
		array_get(TOKEN, token_tye[0])
		string_print(STDERR, rax)
		printer_line(STDERR)
		string_print(STDERR, new_line)
		printer_stack(STDERR)

		sys(60,1)
	}

	return 0
}

func tc_operator(required)() {
	token_load()

	if (token_tye[0] == INCREMENT) {
		token_consume(INCREMENT)
		return INCREMENT
	}
	if (token_tye[0] == DECREMENT) {
		token_consume(DECREMENT)
		return DECREMENT
	}
	if (token_tye[0] == ASSIGN) {
		token_consume(ASSIGN)
		return ASSIGN
	}
	if (token_tye[0] == ADD) {
		token_consume(ADD)
		return ADD
	}
	if (token_tye[0] == SUB) {
		token_consume(SUB)
		return SUB
	}
	if (token_tye[0] == SHIFTL) {
		token_consume(SHIFTL)
		return SHIFTL
	}
	if (token_tye[0] == SHIFTR) {
		token_consume(SHIFTR)
		return SHIFTR
	}

	if (var required == 1) {
		string_print(STDERR, "Error: expected token class OPERATOR got token ")
		array_get(TOKEN, token_tye[0])
		string_print(STDERR, rax)
		printer_line(STDERR)
		string_print(STDERR, new_line)
		printer_stack(STDERR)

		sys(60, 1)
	}

	return 0
}
