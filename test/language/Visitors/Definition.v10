#!Definition.out
#-

include "src/stdlib/stdlib.v10"
include "src/language/parser/Parser.v10"
include "src/language/Scope.v10"
include "src/language/Type.v10"

include "src/language/visitors/Visitor.v10"
include "src/language/visitors/Printer.v10"
include "src/language/visitors/Constructor.v10"
include "src/language/visitors/Typing.v10"
include "src/language/visitors/Method.v10"
include "src/language/visitors/Definition.v10"

global(Scope scope)

func void main()(Stream input, Parser parser, Node root, Visitor v, Scope sc) {
	# Open input file
	input = File_open("test/language/Visitors/sample.v10.test")
	if (input < 0) {
		"Couldn't read input file".println(STDERR)
		return 1
	}

	parser = Parser_new("sample.v10", input)
	root = parser.parse()
	sc = Scope_new()
	scope = sc

	v = Constructor_new()
	root.accept(v)
	v = Typing_new()
	root.accept(v)
	v = Method_new()
	root.accept(v)
	v = Definition_new()
	root.accept(v)
	v = Printer_new()
	root.accept(v)

	sc.print()
}
